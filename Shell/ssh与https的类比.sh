#SSH账号密码安全登录的实现
SSH是通过对数据进行加密后进行传输来保证数据安全的。但是，SSH的数据加密采用的是对称加密算法，只是对称加密所使用的密钥是通过公钥加密/非对称加密实现加密后的安全传输的。另外，每台Linux机器都有自己的密钥对儿（通常放在/etc/ssh目录下），这个密钥对儿跟具体的用户无关。其工作流程是：

1）在主机A上向主机B发送连接请求；
2）主机B在与用户建立连接后，把自己的公钥发送给主机A；
3）主机A通过密钥协商技术产生一个随机密钥，然后使用主机B的公钥对这个随机密钥进行加密后发送给主机B;
4）主机B接收到主机A发送过来的密文形式的密钥后，通过自己的私钥进行解密，得到对称加密使用的密钥明文；至此，会话密钥已经生成完毕了；
5）主机A通过生成的会话密钥对账号和密码等信息进行加密然后发送给主机B；
6）主机B接收到加密信息后，使用会话密钥进行解密，从而得到明文的账号和密码进行账号验证；
7）主机B在验证账号和密码后通知主机A是否登录成功；

总的来说就是先相互传递验证秘钥，协商好秘钥后再用秘钥加密账号和密码，再验证账号密码确定是否登录成功。

#SSH免密钥登录过程

其实登录的过程就是被登录端对登录用户进行“身份验证”的过程，前面是通过账号和密码来验证用户身份，因为密码应该只有该账号的拥有者才知道。而我们知道公钥加密算法中，用公钥加密的数据只能由与其配对的私钥才能解密，而私钥只有用户自己才有。那么，我们是否可以通过这种方式来验证用户身份呢？实际上SSH免密钥登录就是这样的原理。比如，我们想在主机A上以root用户以SSH免密钥的方式登录主机B，登录验证过程是这样的：

1）主机A与主机B协商产生会话密钥；
2）主机A会向主机B发送一个登录请求（如：root@192.168.1.2），发送的信息包括用户名root和root的公钥指纹，且所有信息都是通过会话密钥加密过的。
3）主机B通过会话密钥解密主机A发送的数据得到请求登录的用户名root和root的公钥指纹，然后读取root用户家目录下的所有公钥数据（/root/.ssh/autorized_keys文件中），并分别通过单向加密算法获取各公钥的数据指纹与主机A发送过来的数据指纹做对比，从而找到主机A上的root用户的公钥；
4）主机B使用找到的root用户的公钥对一个随机数进行加密发送发送给主机A；
5）主机A使用root用户的私钥对主机B发送的随机数密文进行解密，然后把解密结果发送给主机B;
6）主机B验证主机A解密后的数据与自己发送的数据一致，则对root用户的身份验证成功；


那么主机A是怎样获取root用户的私钥的呢？主机B又是怎样获取root用户的公钥的呢？ 这个就是实现SSH免密钥登录所要配置的内容：
1）生成密钥对儿：在当前机器A上，可以通过ssh-keygen命令生成一个ssh密钥对儿，一路回车就可以；生成的密钥对儿默认保存在当前登录用户家目录下的.ssh目录，也可以指定保存目录。我们当前是以root用户登录，因此是保存在/root/.ssh目录：
2）我们可以把这个密钥对儿中的两个文件复制到其他用户家目录的.ssh目录下（如/home/wader/.ssh/目录），也可以复制到其他任意目录。需要说明的是一定要注意目录和文件的权限：.ssh 目录的权限必须是0700，authorized_keys 文件权限必须是0600。
3）当在主机A上通过 ssh root@hostB进行登录时，主机A会尝试读取登录用户的家目录下的私钥文件（这里是以root用户登录主机B，因此主机A会读取/root/.ssh/id_rsa文件作为私钥），也可以通过-i选项指定要使用的私钥文件；
4）我们需要手动把公钥的内容复制到要登录机器B的相应用户（如root）家目录下的指定文件中：/home/root/.ssh/autorized_keys；可以使用ssh-copy-id root@host命令直接完成这个操作，也可以通过复制粘贴的方式来完成；
5）在当前机器上就可以通过ssh私钥使用root用户登录机器B了。


HTTP --->telent
HTTPS -->ssh #但中间账号密码的校验替换成了CA证书的校验，这个需要专业机构签发
#参考博客
http://www.cnblogs.com/yyds/p/6992125.html
